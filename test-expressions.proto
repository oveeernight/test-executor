syntax = "proto3";

import "google/protobuf/any.proto";

option csharp_namespace = "TestExpressions";

service ConcreteExecutor {
  rpc Execute(IlTestBatch) returns(ExecutionResult) {}
}

message TypeRepr {
  string asm = 1;
  int32 moduleToken = 2;
  string fullName = 3;
  repeated TypeRepr genericArgs = 4;
}

message MethodRepr {
  TypeRepr declType = 1;
  string name = 2;
  string signature = 3;
}

message FieldRepr {
  TypeRepr typeRepr = 1;
  string name = 2;
}

message BoolConst {
  bool value = 1;
  TypeRepr typeRepr = 2;
}

message CharConst {
  int32 value = 1;
  TypeRepr typeRepr = 2;
}

message Int8Const {
  int32 value = 1;
  TypeRepr typeRepr = 2;
}

message Int16Const {
  int32 value = 1;
  TypeRepr typeRepr = 2;
}

message Int32Const {
  int32 value = 1;
  TypeRepr typeRepr = 2;
}

message Int64Const {
  int64 value = 1;
  TypeRepr typeRepr = 2;
}

message UInt8Const {
  uint32 value = 1;
  TypeRepr typeRepr = 2;
}

message UInt16Const {
  uint32 value = 1;
  TypeRepr typeRepr = 2;
}

message UInt32Const {
  uint32 value = 1;
  TypeRepr typeRepr = 2;
}

message UInt64Const {
  uint64 value = 1;
  TypeRepr typeRepr = 2;
}

message FloatConst {
  float value = 1;
  TypeRepr typeRepr = 2;
}

message DoubleConst {
  double value = 1;
  TypeRepr typeRepr = 2;
}

message StringConst {
  string value = 1;
  TypeRepr typeRepr = 2;
}

message NullConst {
  TypeRepr typeRepr = 1;
}

message Slice {
  google.protobuf.Any expr = 1;
  int32 start = 2;
  int32 end = 3;
  int32 pos = 4;
}

message Combine {
  repeated Slice slices = 1;
  TypeRepr sightType = 2;
}

message ArrayInstance {
  TypeRepr elementTypeRepr = 1;
  int32 size = 2;
  int32 address = 3;
}

message ObjectInstance {
  TypeRepr typeRepr = 1;
  int32 address = 2;
}

message MethodCall {
  MethodRepr methodRepr = 1;
  TypeRepr returnTypeRepr = 2;
  repeated google.protobuf.Any args = 3;
}

message SetArrayIndex {
  ArrayInstance instance = 1;
  int32 index = 2;
  google.protobuf.Any value = 3;
}

message SetObjectField {
  ObjectInstance instance = 1;
  FieldRepr fieldRepr = 2;
  google.protobuf.Any value = 3;
}

message IlTypeInstance {
  TypeRepr type = 1;
}

message IlTest {
  repeated google.protobuf.Any arrangeStmts = 1;
  google.protobuf.Any call = 2;
  optional google.protobuf.Any expectedResult = 3;
  bool raisesCriticalError = 4;
}

message IlTestBatch {
  repeated IlTest tests = 1;
}

message Success {
  int32 generatedTests = 1;
  int32 coverage = 2;
}

message Fail {
  string reason = 1;
  int32 coverage = 2;
  int32 reproduced = 3;
}

message ExecutionResult {
  oneof result {
    Success success = 1;
    Fail fail = 2;
  }
}
